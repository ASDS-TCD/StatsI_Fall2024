install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
IRkernel::installspec(user = FALSE)
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe Requested", "Stopped/Given Warning")
observed
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
grand_total <- sum(observed)
expected <- outer(row_sums, col_sums) / grand_total
expected
chi_square_stat <- sum((observed - expected)^2 / expected)
chi_square_stat
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
df
p_value <- pchisq(chi_square_stat, df = df, lower.tail = FALSE)
p_value
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe Requested", "Stopped/Given Warning")
observed
expected <- outer(rowSums(observed), colSums(observed)) / sum(observed)
expected
standardized_residuals <- (observed - expected) / sqrt(expected)
standardized_residuals
standardized_residuals
data <- read.csv("dataset2.csv")
data <- read.csv("dataset.csv")
data <- read.csv("dataset.csv")
data <- read.csv("dataset_ok.csv")
data <- read.csv("/Users/rafaelaalves/Documents/GitHub/StatsI_Fall2024/problemSets/PS02/my_answers_PS2/dataset_ok.csv")
data <- read.csv("dataset_ok.csv")
getwd()
setwd(Users/rafaelaalves/Documents/GitHub/StatsI_Fall2024/problemSets/PS02/my_answers_PS2)
setwd(/Users/rafaelaalves/Documents/GitHub/StatsI_Fall2024/problemSets/PS02/my_answers_PS2)
setwd("/Users/rafaelaalves/Documents/GitHub/StatsI_Fall2024/problemSets/PS02/my_answers_PS2")
setwd("/Users/rafaelaalves/Documents/GitHub/StatsI_Fall2024/problemSets/PS02/my_answers_PS2")
getwd()
data <- read.csv("dataset_ok.csv")
head(data)
model <- lm(water ~ reserved, data = data)
summary(model)
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe Requested", "Stopped/Given Warning")
observed
# 2) calculating the sums for rows, columns and grand total
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
grand_total <- sum(observed)
# 3) calculating the expected frequencies
expected <- outer(row_sums, col_sums) / grand_total
expected
# 4) calculating the x2 test statistic
chi_square_stat <- sum((observed - expected)^2 / expected)
chi_square_stat
# 5) calculating the degrees of freedom
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
df
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe Requested", "Stopped/Given Warning")
observed
expected <- outer(row_sums, col_sums) / grand_total
expected
chi_square_stat <- sum((observed - expected)^2 / expected)
chi_square_stat
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
df
p_value <- pchisq(chi_square_stat, df = df, lower.tail = FALSE)
p_value
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe Requested", "Stopped/Given Warning")
observed
expected <- outer(rowSums(observed), colSums(observed)) / sum(observed)
expected
# calculating the standardized residuals
standardized_residuals <- (observed - expected) / sqrt(expected)
standardized_residuals
model <- lm(water ~ reserved, data = data)
summary(model)
install.packages("stargazer")
library(stargazer)
stargazer(expected, type = "text", out = "expected_table.tex")
